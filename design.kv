<LoginScreen>: #create "rule" - visible
# GridLayout is divided into two sub-GridLayouts, becsaue different number of columns
    GridLayout: #all of these (also Label, Button etc.) are actually Python classes/objects that kivy implicitly imports --> same as : "from kivy.uix.gridlayout import GridLayout" and then "GridLayout()"
        cols: 1
        GridLayout:
            cols: 1
            padding: 15, 15 #horizontal and vertical padding of objects to the outside of app box
            spacing: 20, 20 #horizontal and vertical spacing between objects/widgets amongst each other
            Label:
                text: "User Login"
                font_size: "20sp"
            TextInput:
                id: username
                hint_text: "Username"
            TextInput:
                id: pw
                password: True
                hint_text: "Password"
            RelativeLayout:
                Button:
                    text: "Login"
                    on_press: root.login(root.ids.username.text, root.ids.pw.text)
                    size_hint: 0.3, 0.5 #size_hint determines how much space a widget is going to get relative to its parent (in this case: how much space of the first RelativeLayout does this button occupy)
                    pos_hint: {'center_x': 0.5, 'center_y': 0.6}
            Label:
                id: login_failed
                text: ""
        GridLayout:
            cols: 2 
            size_hint: 0.2, 0.2
            padding: 10, 10
            spacing: 10, 0
            Button:
                text: "Forgot Password"
                background_color: 1, 1, 1, 0
                opacity: 1 if self.state == "normal" else 0.5 #change opacity based on state - unclicked state is "normal" 
                color: 0.1, 0.7, 1, 1
            Button:
                text: "Sign Up!"
                on_press: root.sign_up() #function in main.py (the root of this button is LoginScreen; if not same class add class-name instead of root)
                background_color: 1, 1, 1, 0
                opacity: 1 if self.state == "normal" else 0.5
                color: 0.1, 0.7, 1, 1

<SignUpScreen>:
    GridLayout:
        cols: 1
        padding: 20, 20
        spacing: 20, 20 
        Label:
            text: "\n\nSign up for some MONKEY mood!"
            font_size: "20sp"
        RelativeLayout: #size_hint and pos_hint should be in RelativeLayout parent to have desired effect
            size_hint: 1, 0.8
            pos_hint: {'center_y': 0.9}
            TextInput:
                id: username
                hint_text: "Username"
                size_hint: 1, 0.6
        RelativeLayout:
            size_hint: 1, 0.8
            pos_hint: {'center_y': 0.9}
            TextInput:
                id: pw
                hint_text: "Password"
                size_hint: 1, 0.6
        RelativeLayout:
            Button:
                text: "Submit"
                on_press: root.add_user(root.ids.username.text, root.ids.pw.text)
                size_hint: 0.3, 0.3 #size_hint determines how much space a widget is going to get relative to its parent (in this case: how much space of the first RelativeLayout does this button occupy)
                pos_hint: {'center_x': 0.5, 'center_y': 0.6}

<SignUpSuccess>:
    GridLayout:
        cols:1
        Label:
            text: "Yep, that worked! Successfully signed up!"
        Button:
            text: "Go back to Login"
            on_press: root.go_to_login()

<LoginSuccess>:
    GridLayout:
        cols:1
        padding: 30, 30
        spacing: 30, 30
        RelativeLayout:
            ImageButton:
                on_press: root.log_out()
                source: "logout_hover.png" if self.hovered else "logout_nothover.png"
                size_hint: 0.25, 0.25
                pos_hint: {'center_x': 0.93, 'center_y': 0.7}
        Label:
            text: "How do you feel?"
        TextInput:
            id: feeling
            hint_text: "Things to try: happy, sad, hungry..."
        Button:
            text: "Enlighten me!"
            on_press: root.get_quote(root.ids.feeling.text)
        ScrollView:
            Label:
                id: quote
                text: f""
                text_size: self.width, None #label will have width of widget (which is e.g. the size of a mobile phone screen); None lets heights be dynamic
                size_hint_y: None
                height: self.texture_size[1] #1=height (0=width), label changes its heights dynamically based on content now

<RootWidget>: #create root and add children (created above) to is
    LoginScreen:
        name: "login_screen" #name to pass to main.py for class-methods
    SignUpScreen:
        name: "sign_up_screen"
    SignUpSuccess:
        name: "sign_up_success"
    LoginSuccess:
        name: "login_success"